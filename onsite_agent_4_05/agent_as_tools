{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyMbQOaWExJkCTzA4jGAukUT",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/ZohaibCodez/Panaverse-Agentic-AI/blob/master/onsite_agent_4_05/agent_as_tools\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!pip install -Uq openai-agents"
      ],
      "metadata": {
        "id": "to846FEwO8OK"
      },
      "execution_count": 2,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import nest_asyncio\n",
        "nest_asyncio.apply()"
      ],
      "metadata": {
        "id": "wVXbARf4QY9B"
      },
      "execution_count": 14,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from agents import Agent,Runner,AsyncOpenAI,OpenAIChatCompletionsModel,set_tracing_disabled\n",
        "from google.colab import userdata\n",
        "import requests\n",
        "\n",
        "set_tracing_disabled(True)\n",
        "\n",
        "external_client = AsyncOpenAI(\n",
        "    base_url = \"https://generativelanguage.googleapis.com/v1beta/openai/\",\n",
        "    api_key=userdata.get(\"GOOGLE_API_KEY\")\n",
        ")\n",
        "\n",
        "model = OpenAIChatCompletionsModel(\n",
        "    openai_client=external_client,\n",
        "    model=\"gemini-2.0-flash\"\n",
        ")\n"
      ],
      "metadata": {
        "id": "WXm-KlLDPKaH"
      },
      "execution_count": 28,
      "outputs": []
    },
    {
      "cell_type": "code",
      "execution_count": 29,
      "metadata": {
        "id": "h10xvsV7Nx7s"
      },
      "outputs": [],
      "source": [
        "from agents.tool import function_tool\n",
        "\n",
        "@function_tool(\"get_all_products\")\n",
        "def get_all_products_in_store():\n",
        "  response = requests.get(\"https://fakestoreapi.com/products\")\n",
        "  return response.json()"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "shopping_agent = Agent(\n",
        "    name=\"Shopping Agent\",\n",
        "    instructions=\"You can search online or simple answer . Asnwer with emoji.\",\n",
        "    tools=[get_all_products_in_store],\n",
        "    model=model\n",
        ")"
      ],
      "metadata": {
        "id": "z-kiDZH_Oa1T"
      },
      "execution_count": 30,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "def console_chat(query):\n",
        "  answer = Runner.run_sync(shopping_agent, query)\n",
        "  print(answer.final_output)"
      ],
      "metadata": {
        "id": "YbNug9ZlO1nd"
      },
      "execution_count": 31,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "console_chat(\"hi\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Kw7MMIWHO1kK",
        "outputId": "e2d6665f-ee67-4d45-e1cc-6500643b850e"
      },
      "execution_count": 32,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "üëã Hello! How can I help you today?\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "console_chat(\"List all the products\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "NbmsbwP9QLkW",
        "outputId": "9b0cce5b-b420-4000-9f93-360ba1660f00"
      },
      "execution_count": 33,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Here are all the products in the store:\n",
            "\n",
            "*   Fjallraven - Foldsack No. 1 Backpack, Fits 15 Laptops\n",
            "*   Mens Casual Premium Slim Fit T-Shirts\n",
            "*   Mens Cotton Jacket\n",
            "*   Mens Casual Slim Fit\n",
            "*   John Hardy Women's Legends Naga Gold & Silver Dragon Station Chain Bracelet\n",
            "*   Solid Gold Petite Micropave\n",
            "*   White Gold Plated Princess\n",
            "*   Pierced Owl Rose Gold Plated Stainless Steel Double\n",
            "*   WD 2TB Elements Portable External Hard Drive - USB 3.0\n",
            "*   SanDisk SSD PLUS 1TB Internal SSD - SATA III 6 Gb/s\n",
            "*   Silicon Power 256GB SSD 3D NAND A55 SLC Cache Performance Boost SATA III 2.5\n",
            "*   WD 4TB Gaming Drive Works with Playstation 4 Portable External Hard Drive\n",
            "*   Acer SB220Q bi 21.5 inches Full HD (1920 x 1080) IPS Ultra-Thin\n",
            "*   Samsung 49-Inch CHG90 144Hz Curved Gaming Monitor (LC49HG90DMNXZA) ‚Äì Super Ultrawide Screen QLED\n",
            "*   BIYLACLESEN Women's 3-in-1 Snowboard Jacket Winter Coats\n",
            "*   Lock and Love Women's Removable Hooded Faux Leather Moto Biker Jacket\n",
            "*   Rain Jacket Women Windbreaker Striped Climbing Raincoats\n",
            "*   MBJ Women's Solid Short Sleeve Boat Neck V\n",
            "*   Opna Women's Short Sleeve Moisture\n",
            "*   DANVOUY Womens T Shirt Casual Cotton Short\n",
            "\n",
            "üõçÔ∏è Happy shopping! üíñ\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "o60EyREOQ408"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}